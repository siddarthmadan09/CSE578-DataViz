{"version":3,"sources":["../../src/api/index.js"],"names":["config","db","api","use","get","req","res","json","version","dbo","collection","find","toArray","err","result","offering_id","parseInt","params","console","log"],"mappings":";;;;;;AAAA;;AACA;;AACA;;;;;;kBAEe,gBAAoB;AAAA,KAAjBA,MAAiB,QAAjBA,MAAiB;AAAA,KAATC,EAAS,QAATA,EAAS;;AAClC,KAAIC,MAAM,sBAAV;;AAEA;AACAA,KAAIC,GAAJ,CAAQ,SAAR,EAAmB,sBAAO,EAAEH,cAAF,EAAUC,MAAV,EAAP,CAAnB;;AAEA;AACAC,KAAIE,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC1BA,MAAIC,IAAJ,CAAS,EAAEC,yBAAF,EAAT;AACA,EAFD;;AAIAN,KAAIE,GAAJ,CAAQ,WAAR,EAAqB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClC,MAAIG,MAAMR,GAAGA,EAAH,CAAM,YAAN,CAAV;AACEQ,MAAIC,UAAJ,CAAe,WAAf,EAA4BC,IAA5B,CAAiC,EAAjC,EAAqCC,OAArC,CAA8C,UAASC,GAAT,EAAcC,MAAd,EAAsB;AACnE,OAAID,GAAJ,EAAQ;AACV,UAAMA,GAAN;AACA;AACDP,OAAIC,IAAJ,CAASO,MAAT;AACC,GALC;AAOF,EATD;;AAWAZ,KAAIE,GAAJ,CAAQ,sBAAR,EAAgC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7C,MAAIS,cAAcC,SAASX,IAAIY,MAAJ,CAAW,aAAX,CAAT,CAAlB;AACAC,UAAQC,GAAR,CAAYJ,WAAZ;AACA,MAAIN,MAAMR,GAAGA,EAAH,CAAM,YAAN,CAAV;AACEQ,MAAIC,UAAJ,CAAe,SAAf,EAA0BC,IAA1B,CAA+B,EAACI,wBAAD,EAA/B,EAA8CH,OAA9C,CAAuD,UAASC,GAAT,EAAcC,MAAd,EAAsB;AAC5E,OAAID,GAAJ,EAAQ;AACV,UAAMA,GAAN;AACA;AACDP,OAAIC,IAAJ,CAASO,MAAT;AACC,GALC;AAOF,EAXD;;AAaA,QAAOZ,GAAP;AACA,C","file":"index.js","sourcesContent":["import { version } from '../../package.json';\nimport { Router } from 'express';\nimport facets from './facets';\n\nexport default ({ config, db }) => {\n\tlet api = Router();\n\n\t// mount the facets resource\n\tapi.use('/facets', facets({ config, db }));\n\n\t// perhaps expose some API metadata at the root\n\tapi.get('/', (req, res) => {\n\t\tres.json({ version });\n\t});\n\n\tapi.get('/offering', (req, res) => {\n\t\tvar dbo = db.db(\"dv_project\");\n  \t\tdbo.collection(\"offerings\").find({}).toArray( function(err, result) {\n    \tif (err){\n\t\t\tthrow err;\n\t\t}\n\t\tres.json(result );\n\t\t});\n\t\t\n\t});\n\n\tapi.get('/review/:offering_id', (req, res) => {\n\t\tlet offering_id = parseInt(req.params['offering_id']);\n\t\tconsole.log(offering_id);\n\t\tvar dbo = db.db(\"dv_project\");\n  \t\tdbo.collection(\"reviews\").find({offering_id}).toArray( function(err, result) {\n    \tif (err){\n\t\t\tthrow err;\n\t\t}\n\t\tres.json(result );\n\t\t});\n\t\t\n\t});\n\n\treturn api;\n}\n"]}